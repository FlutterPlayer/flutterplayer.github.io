import{_ as i,W as d,X as t,Y as e,Z as a,$ as s,a1 as l,C as r}from"./framework-07d536f1.js";const p={},o={href:"https://github.com/befovy/ijkplayer",target:"_blank",rel:"noopener noreferrer"},c=e("br",null,null,-1),u=l(`<p>让我们开始使用 fplayer 构建你的 Flutter 音视频应用之旅！<br> 别担心，只需要掌握很少的知识你就能完成 Flutter 音视频应用的开发。</p><p>本节内容包括简洁安装指南以及详细安装指南。</p><h2 id="简洁安装指南" tabindex="-1"><a class="header-anchor" href="#简洁安装指南" aria-hidden="true">#</a> 简洁安装指南</h2><p>在 flutter 项目配置文件 <code>pubspec.yaml</code> 中加入 <code>fplayer</code> 依赖。最新的稳定版本号见 badge 图标。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>
  <span class="token key atrule">fplayer</span><span class="token punctuation">:</span> ^<span class="token punctuation">{</span>latest verison<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={href:"https://pub.dartlang.org/packages/fplayer",target:"_blank",rel:"noopener noreferrer"},b=e("img",{src:"https://img.shields.io/pub/v/fplayer.svg",alt:"pub package",loading:"lazy"},null,-1),m=l(`<p><code>{latest verison}</code> 使用徽标中的版本号代替。</p><p>如果需要使用某些尚未发布的功能更新，可以直接依赖对应的 git 分支，方式如下。 比如这里依赖 develop 分支，</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>
  <span class="token key atrule">fplayer</span><span class="token punctuation">:</span>
    <span class="token key atrule">git</span><span class="token punctuation">:</span>
      <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/FlutterPlayer/fplayer.git
      <span class="token key atrule">ref</span><span class="token punctuation">:</span> develop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="详细安装步骤" tabindex="-1"><a class="header-anchor" href="#详细安装步骤" aria-hidden="true">#</a> 详细安装步骤</h2><p>如果你熟悉 Flutter App 的依赖安装，看上面 “简洁安装指南” 就够了，本页后续内容完全可以跳过。</p><p>如果你不太熟悉 Flutter App 开发流程，看到了这这一部分内容，我们还是假定你已经在你的设备上配置好了 Flutter 的开发环境。即你可以在命令行输入 <code>flutter</code> 命令，并且有相应的正确输出内容。</p><h3 id="新建-flutter-app-项目" tabindex="-1"><a class="header-anchor" href="#新建-flutter-app-项目" aria-hidden="true">#</a> 新建 Flutter App 项目</h3><p>终端输入以下命令，新建一个名为 <code>playerapp</code> 的 Flutter App 项目。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ flutter create -t app playerapp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令运行结束后，Flutter 会给我们如下提示。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>In order to run your application, type:

  $ cd playerapp
  $ flutter run

Your application code is in playerapp/lib/main.dart.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接上手机设备（或者打开 Android 模拟器），并且使用 <code>flutter doctor</code> 命令检查设备是否连接成功。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ flutter doctor
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, v1.7.8+hotfix.4, on Mac OS X 10.14.3 18D109, locale zh-Hans-CN)

[✓] Android toolchain - develop for Android devices (Android SDK version 28.0.3)
[✓] Xcode - develop for iOS and macOS (Xcode 10.3)
[✓] iOS tools - develop for iOS devices
[✓] Android Studio (version 3.4)
[✓] IntelliJ IDEA Ultimate Edition (version 2019.1.2)
[✓] VS Code (version 1.36.1)
[✓] Connected device (1 available)

• No issues found!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>flutter doctor</code> 命令的输出中，至少应该含有 <code>[✓] Connected device (1 available)</code></p><h3 id="安装-fplayer-依赖" tabindex="-1"><a class="header-anchor" href="#安装-fplayer-依赖" aria-hidden="true">#</a> 安装 fplayer 依赖</h3><p>进入上一步中创建的目录 playerapp 中，编辑其中的文件 <code>pubspec.yaml</code> ，增加依赖 <code>fplayer: ^{latest verison}</code></p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code>dependencies:
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> flutter:
</span><span class="token prefix unchanged"> </span><span class="token line">   sdk: flutter
</span><span class="token prefix unchanged"> </span><span class="token line">   
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> fplayer: ^{latest verison}
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),h={href:"https://pub.dartlang.org/packages/fplayer",target:"_blank",rel:"noopener noreferrer"},g=e("img",{src:"https://img.shields.io/pub/v/fplayer.svg",alt:"pub package",loading:"lazy"},null,-1),f=l(`<p><code>{latest verison}</code> 使用徽标中的版本号代替。</p><p>然后在 playerapp 目录中运行如下命令安装依赖，等待命令成功完成。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ flutter pub get --verbose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="验证依赖安装" tabindex="-1"><a class="header-anchor" href="#验证依赖安装" aria-hidden="true">#</a> 验证依赖安装</h3><p>安装完 fplayer 之后我们先验证一下，确保安装正确。</p><p>编辑 <code>lib/main.dart</code> 文件，在开头加入如下行，引入 fplayer。</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:fplayer/fplayer.dart&#39;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后分别编译 ios 和 android 项目，确保 build 成功</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ flutter build apk
$ flutter build ios --no-codesign
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> <strong>注意事项</strong></h4><ul><li>fplayer 中使用了 androidx 的 support 库，在 app 中需要启用 androidx</li><li>如果 build apk 时太久时间没有输出，可以先在 android 目录运行 <code>./gradlew</code> 检查 gradle 环境是否正确。</li><li>pod install 安装依赖需要从 github 下载底层 ijkplayer 的二进制文件，如果网不好可能会很慢。<br> 建议在 ios 文件夹中运行 <code>pod install --verbose</code> 查看实时下载进度。</li><li>ios可调试环境：flutter 3.3.10、xcode 14.2</li></ul>`,11),k={href:"https://github.com/FlutterPlayer/fplayer/issues",target:"_blank",rel:"noopener noreferrer"};function y(x,_){const n=r("ExternalLinkIcon");return d(),t("div",null,[e("p",null,[a("fplayer 是 fijkplayer 的 Flutter 封装， 是一款支持 android 和 iOS 的 Flutter 媒体播放器插件， 由 "),e("a",o,[a("ijkplayer"),s(n)]),a(" 底层驱动。"),c,a(" 通过纹理（Texture）接入播放器视频渲染到 Flutter 中。")]),u,e("p",null,[e("a",v,[b,s(n)]),a("    ")]),m,e("p",null,[e("a",h,[g,s(n)]),a("    ")]),f,e("p",null,[a("Flutter 中安装 fplayer 的内容到这里就结束了，有任何问题请在 "),e("a",k,[a("github issues"),s(n)]),a(" 中进行提问。")])])}const A=i(p,[["render",y],["__file","index.html.vue"]]);export{A as default};
