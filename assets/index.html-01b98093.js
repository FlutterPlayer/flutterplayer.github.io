import{_ as o,W as a,X as s,Y as e,Z as r,$ as l,a0 as n,C as i}from"./framework-07d536f1.js";const h={},p={href:"https://github.com/befovy/fijkplayer",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/bilibili/ijkplayer",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/FlutterPlayer/ijkplayer",target:"_blank",rel:"noopener noreferrer"},u=e("a",{href:"/core"},"此处",-1),d=e("p",null,"fplayer 具有和 ijkplayer 一样的播放能力，并且开箱即用，不需要使用者再去编译 ijkplayer，API易用，易于在 Flutter 项目中集成。",-1),f=e("p",null,"fplayer 有内置的编译好的ffmepg 和 ijkplayer，分别托管在 Meven Cental 和 CocoaPods 上。",-1),y=e("p",null,"这个站点包含了大量的 fplayer 的文档帮助你使用以及理解 fplayer。",-1),b=e("hr",null,null,-1),k=e("p",null," ",-1),g=e("h2",{id:"开启你的-fplayer-之旅",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开启你的-fplayer-之旅","aria-hidden":"true"},"#"),r(" 开启你的 fplayer 之旅：")],-1),m=e("ul",null,[e("li",null,[r("中文版 "),e("a",{href:"/guide/quick"},"开始使用")])],-1),j=e("p",null," ",-1),v=e("hr",null,null,-1),x=e("h2",{id:"鸣谢以下项目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#鸣谢以下项目","aria-hidden":"true"},"#"),r(" 鸣谢以下项目")],-1),F={href:"https://github.com/befovy/fijkplayer",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/bilibili/ijkplayer",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/FFmpeg/FFmpeg",target:"_blank",rel:"noopener noreferrer"},N=e("hr",null,null,-1),P=e("br",null,null,-1),V={href:"https://github.com/FlutterPlayer/fplayer/issues",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/FlutterPlayer/fplayer/pulls",target:"_blank",rel:"noopener noreferrer"};function E(I,S){const t=i("ExternalLinkIcon");return a(),s("div",null,[e("p",null,[r("fplayer 是一个 Flutter 生态的媒体播放器，是基于 "),e("a",p,[r("fijkplayer"),l(t)]),r(" 的项目的二次开发，目前支持 Android 和 iOS , 后续准备支持 Mac 和 Windows。")]),e("p",null,[r("fplayer 使用 ijkplayer 作为播放器内核。"),e("a",_,[r("ijkplayer"),l(t)]),r(" 使用 ffmpeg 进行音视频解封装和解码延续ijkplayer的内核代码支持ios和安卓的硬解码。")]),e("p",null,[r("fplayer 的内核代码将托管至 "),e("a",c,[r("fpalyer-core"),l(t)]),r("项目中，目前已经升级NDK版本至21安卓最低支持16这样做的目的是为了将部分java代码在后续的计划中逐步迁移至native c++代码，ios的SDK版本也升级到ios 11，同时剔除了armv7的版本支持 仅支持arm64 如果您这边有对其他指令支持的可以在项目中自行编译内核代码 具体的编译以及替换内核的方法见"),u,r("。")]),d,f,y,b,k,g,m,n(" * English Version [Getting Started](/en/) "),n(" * Read news, hints and tips on our [developer blog][]. "),n(" * Read the latest [release notes][]. "),n(" * Browse the library [Javadoc][]. "),n(" * Browse the source code for the [latest release][] and current [tip of tree][]. "),j,v,x,e("ul",null,[e("li",null,[e("a",F,[r("fijkplayer"),l(t)])]),e("li",null,[e("a",B,[r("ijkplayer"),l(t)])]),e("li",null,[e("a",C,[r("ffmpeg"),l(t)])])]),N,e("p",null,[e("span",null,[e("small",null,[r(" 由于个人能力限制，文档中难免不出现纰漏。"),P,r(" 如果您在阅读时发现任何不当或者错误内容，请在 "),e("a",V,[r("github issues"),l(t)]),r(" 上进行指正，或直接提交 "),e("a",w,[r("pull request"),l(t)]),r("。 ")])])])])}const A=o(h,[["render",E],["__file","index.html.vue"]]);export{A as default};
