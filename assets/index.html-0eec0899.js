import{_ as n,W as s,X as i,Y as e,Z as a,$ as d,a1 as l,C as o}from"./framework-07d536f1.js";const t={},c=e("p",null,"fplayer只是桥接了ijkplayer和flutter,ijkplayer才是真正的播放器内核。在使用的过程中可能会出现需要自己编译内核达到定制裁剪的能力从而达到增加功能或者压缩文件大小等。在使用过程中请注意：",-1),p={href:"https://github.com/FlutterPlayer/ijkplayer",target:"_blank",rel:"noopener noreferrer"},u=e("li",null,"以本地相对路径引入fijkplayer",-1),m=e("li",null,"以本地相对路径引入ijkplayer",-1),h=l(`<h2 id="ios" tabindex="-1"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> IOS</h2><p>编译参考 <a href="/core/build-iOS">此处</a></p><p>把文件 IJKMediaPlayer.framework 复制到 \${fplayer}/ios/Frameworks 目录中。 修改文件 \${fplayer}/ios/fplayer.podsped 文件内容。</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token inserted">+   # 去掉这三行原先的注释</span>
<span class="token inserted">+   s.preserve_paths = &#39;Frameworks/*.framework&#39;</span>
<span class="token inserted">+   s.vendored_frameworks = &#39;Frameworks/IJKPlayer.framework&#39;</span>
<span class="token inserted">+   s.xcconfig = { &#39;LD_RUNPATH_SEARCH_PATHS&#39; =&gt; &#39;&quot;$(PODS_ROOT)/Frameworks/&quot;&#39; }</span>

<span class="token deleted">-   # s.dependency &#39;fplayer-core&#39;, &#39;~&gt; 0.1.1&#39; // 把原先这一行注释掉</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="android" tabindex="-1"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h2><p>编译参考 <a href="/core/build-android">此处</a></p><p>把文件 fplayer-core.aar 复制到 \${fplayer}/android/aars 目录中。 修改文件 \${fplayer}/android/build.gradle 中 dependencies 内容。</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token deleted">-    implementation &#39;io.github.flutterplayer:fplayer-core:1.0.0&#39; // 注释掉这一行</span>
<span class="token inserted">+    implementation(name: &#39;fplayer-core&#39;, ext: &#39;aar&#39;)  // 去掉这行原先的注释</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="harmonyos" tabindex="-1"><a class="header-anchor" href="#harmonyos" aria-hidden="true">#</a> HarmonyOS</h2><p>鸿蒙系统需要先将Flutter的环境准备好可以<a href="/core/harmonyos-init">参考</a></p><p>准备好了之后就可以开始编译相关的内核代码</p>`,11);function f(_,v){const r=o("ExternalLinkIcon");return s(),i("div",null,[c,e("ol",null,[e("li",null,[a("一定要使用项目内核的代码的仓库地址"),e("a",p,[a("fplayer-core"),d(r)])]),u,m]),h])}const y=n(t,[["render",f],["__file","index.html.vue"]]);export{y as default};
